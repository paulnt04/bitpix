= Backend
- carrierwave for uploads and thumbnail generation (store locally)
- zip generation
- devise/cancan for authentication/authorization

= Frontend
- ajax selection/deselection saved into user profile (highlight selection)
- download selection or entire albums
- view via photos or albums (tabs on nav bar to select view selection)
- selection of photos survives across sessions until downloaded.
- review selection before download
- use Twitter bootstrap (modal for photo preview, popover for info)
- have button to clear all selection (with confirmation)
- have tags (for search)
- use mongo for search (future)

= Models
- Users
  has_many :photos
  has_many :albums
- Photos (actual record)
  belongs_to :user
  belongs_to :album
  has_many :tags => through => taggings
  mount_uploader :file, FileUploader
- FileUploader (file uploaded)
- Albums (actual photo organizations)
  belongs_to :user
  has_many :photos
  has_many :tags, :through => taggings
- Tags (Events, Locations, Terms)
  has_many :albums, :through => taggings
  has_many :photos, :through => taggings

